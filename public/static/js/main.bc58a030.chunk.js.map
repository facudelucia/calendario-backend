{"version":3,"sources":["hooks/useForm.js","helpers/fetch.js","types/types.js","actions/auth.js","components/auth/LoginScreen.js","helpers/prepare-events.js","actions/event.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","LoginScreen","dispatch","useDispatch","Lemail","Lpassword","formLoginValues","handleLoginInputChange","Rname","Remail","Rpassword","Rconfirm","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","prepareEvents","events","map","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdate","eventDeleted","eventLoaded","Navbar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowEnd","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","settitleValid","formValues","setformValues","ui","activeEvent","calendar","modalOpen","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","id","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","PublicRoute","isAuth","Component","component","rest","props","to","PrivateRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc58a030.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = \"GET\") => {\r\n    const url = `${baseUrl}/${endpoint}`\r\n\r\n    if(method === \"GET\"){\r\n        return fetch(url)\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n    uiOpenModal: \"[ui] Open modal\",\r\n    uiCloseModal: \"[ui] Close modal\",\r\n\r\n    eventLogout:\"[event] Logout\",\r\n    eventAddNew: \"[event] Add new\",\r\n    eventStartAddNew: \"[event] Start add new\",\r\n    eventSetActive: \"[event] Set active\",\r\n    eventClearActiveEvent: \"[event] Clear Active Event\",\r\n    eventUpdate: \"[event] Event update\",\r\n    eventDeleted: \"[event] Event deleted\",\r\n    eventLoaded: \"[event] Event loaded\",\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}","import { fetchSinToken, fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const startLogin = (email, password) =>{\r\n    return async(dispatch) => {\r\n        const resp = await fetchSinToken(\"auth\", {email, password}, \"POST\");\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem(\"token\", body.token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime())\r\n        \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire(\"Error\", body.msg, \"error\")\r\n        }\r\n    }\r\n};\r\n\r\nexport const startRegister = (email, password, name) =>{\r\n    return async(dispatch) => {\r\n        const resp = await fetchSinToken(\"auth/new\", {email, password, name}, \"POST\");\r\n        const body = await resp.json();\r\n    \r\n        if(body.ok){\r\n            localStorage.setItem(\"token\", body.token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime())\r\n        \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire(\"Error\", body.msg, \"error\")\r\n        }\r\n    }\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken(\"auth/renew\");\r\n        const body = await resp.json();\r\n    \r\n        if(body.ok){\r\n            localStorage.setItem(\"token\", body.token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime())\r\n        \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            dispatch(checkingFinish())\r\n        }\r\n    }\r\n};\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({type: types.authLogout});","import React from 'react';\r\nimport './login.css';\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst LoginScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        Lemail: \"\",\r\n        Lpassword: \"\",\r\n    });\r\n\r\n    const { Lemail, Lpassword } = formLoginValues\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        Rname: \"\",\r\n        Remail: \"\",\r\n        Rpassword: \"\",\r\n        Rconfirm: \"\",\r\n    });\r\n\r\n    const { Rname, Remail, Rpassword, Rconfirm } = formRegisterValues\r\n\r\n    const handleLoginSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(Lemail, Lpassword))\r\n    }\r\n\r\n    const handleRegisterSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(Rpassword !== Rconfirm){\r\n            Swal.fire(\"Error\", \"passwords must match\", \"error\");\r\n            return\r\n        }\r\n        dispatch(startRegister(Remail, Rpassword, Rname))\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLoginSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                value={Lemail}\r\n                                name=\"Lemail\"\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                value={Lpassword}\r\n                                name=\"Lpassword\"\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegisterSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                value={Rname}\r\n                                name=\"Rname\"\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                value={Remail}\r\n                                name=\"Remail\"\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                value={Rpassword}\r\n                                name=\"Rpassword\"\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                value={Rconfirm}\r\n                                name=\"Rconfirm\"\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;","import moment from 'moment'\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map(e => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n    }))\r\n}","import { types } from \"../types/types\"\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { prepareEvents } from \"../helpers/prepare-events\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        const {uid, name} = getState().auth;\r\n        try {\r\n            const resp = await fetchConToken(\"events\", event, \"POST\");\r\n            const body = await resp.json();\r\n            if(body.ok){\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, \"PUT\");\r\n            const body = await resp.json();\r\n            if(body.ok){\r\n                dispatch(eventUpdate(event))\r\n            }else{\r\n                Swal.fire(\"Error\", body.msg, \"error\")\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nconst eventUpdate = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n})\r\nexport const eventStartDeleted = () => {\r\n    return async(dispatch, getState) => {\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {},\"DELETE\");\r\n            const body = await resp.json();\r\n            if(body.ok){\r\n                dispatch(eventDeleted())\r\n            }else{\r\n                Swal.fire(\"Error\", body.msg, \"error\")\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted,\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch, getState) => {\r\n        const {uid, name} = getState().auth;\r\n        try {\r\n            const resp = await fetchConToken(\"events\");\r\n            const body = await resp.json();\r\n            \r\n            const events = prepareEvents(body.events)\r\n            dispatch(eventLoaded(events))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type:types.eventLogout\r\n})","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventClearActiveEvent, eventLogout } from '../../actions/event';\r\n\r\nconst Navbar = () => {\r\n    const {name} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n        dispatch(eventLogout())\r\n    }\r\n    return ( \r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Navbar;","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nconst CalendarEvent = ({event}) => {\r\n\r\n    const {title, user} = event;\r\n    return ( \r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> -{user.name}</span>\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default CalendarEvent;","import { types } from \"../types/types\"\r\n\r\n\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useState, useEffect } from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment'\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from \"sweetalert2\";\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventUpdate, eventStartAddNew, eventStartUpdate } from '../../actions/event';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\");\r\nconst nowEnd = now.clone().add(1, \"hours\");\r\nconst initEvent = {\r\n    title: \"\",\r\n    notes: \"\",\r\n    start: now.toDate(),\r\n    end: nowEnd.toDate(),\r\n}\r\nconst CalendarModal = () => {\r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n    const [dateEnd, setDateEnd] = useState(nowEnd.toDate())\r\n    const [titleValid, settitleValid] = useState(true)\r\n    const [formValues, setformValues] = useState(initEvent)\r\n    const {title, notes, start, end} = formValues\r\n\r\n    const state = useSelector(state => state.ui)\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n    const {modalOpen} = state\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setformValues(activeEvent)\r\n        }else{\r\n            setformValues(initEvent)\r\n        }\r\n    }, [activeEvent, setformValues])\r\n\r\n\r\n    const closeModal = () => {\r\n        \r\n        dispatch(eventClearActiveEvent())\r\n        dispatch(uiCloseModal())\r\n        setformValues(initEvent)\r\n    }\r\n\r\n    const handleStartChange = (e) => {\r\n        setDateStart(e)\r\n        setformValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n    const handleEndChange = (e) => {\r\n        setDateEnd(e)\r\n        setformValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n    const handleInputChange = (e) => {\r\n        setformValues({\r\n            ...formValues,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault()\r\n        const momentStart = moment(start)\r\n        const momentEnd = moment(end)\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire(\"Error\", \"La fecha de finalizacion debe ser mayor a la fecha de inicio\", \"error\");\r\n        }\r\n\r\n        if(title.trim()===\"\" || notes.trim() === \"\"){\r\n            return settitleValid(false)\r\n        }\r\n\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues))\r\n        }else{\r\n            dispatch(eventStartAddNew(formValues))\r\n        }\r\n\r\n        \r\n        \r\n        settitleValid(true)\r\n        closeModal()\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n            <h1>{activeEvent ? \"Editar evento\" : \"Nuevo evento\" }</h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && \"is-invalid\"}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n\r\n    );\r\n}\r\n\r\nexport default CalendarModal;","import React from 'react';\r\nimport { useDispatch} from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nconst AddNewFab = () => {\r\n\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n    return ( \r\n        <button \r\n            onClick={handleClick}\r\n            className=\"btn btn-primary fab\"\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button> \r\n    );\r\n}\r\n \r\nexport default AddNewFab;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {eventStartDeleted } from '../../actions/event';\r\n\r\nconst DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const handleClick = ( ) => {\r\n        dispatch(eventStartDeleted())\r\n    }\r\n\r\n\r\n    return ( \r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleClick}>\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> borrar evento </span>\r\n        </button> \r\n    );\r\n}\r\n \r\nexport default DeleteEventFab;","import React, { useState, useEffect } from 'react';\r\nimport Navbar from '../ui/Navbar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\"\r\nimport { messages } from \"../../helpers/calendar-messages-es\";\r\nimport \"moment/locale/es\";\r\nimport CalendarEvent from \"./CalendarEvent\";\r\nimport CalendarModal from './CalendarModal';\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/event';\r\nimport AddNewFab from '../ui/AddNewFab';\r\nimport DeleteEventFab from '../ui/DeleteEventFab';\r\n\r\nmoment.locale(\"es\");\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\nconst CalendarScreen = () => {\r\n    const [lastView, setlastView] = useState(localStorage.getItem(\"lastView\") || \"month\")\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n    const {uid} = useSelector(state => state.auth)\r\n   \r\n    \r\n    const dispatch = useDispatch()\r\n    const onDoubleClick = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e))\r\n        \r\n    }\r\n    const onSelectSlot = () => {\r\n        \r\n        dispatch(eventClearActiveEvent())\r\n        \r\n    }\r\n    const onViewChange = (e) => {\r\n        setlastView(e)\r\n        localStorage.setItem(\"lastView\", e)\r\n    }\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ?\"#367CF7\": \"#465660\",\r\n            borderRadius: \"0px\",\r\n            opacity: 0.8,\r\n            display: \"block\",\r\n            color: \"white\",\r\n\r\n        }\r\n        return { style }\r\n    }\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: 500 }}\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n            />\r\n            <AddNewFab />\r\n            {activeEvent && <DeleteEventFab />}\r\n            \r\n            <CalendarModal />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalendarScreen;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\n\r\nconst PublicRoute = ({\r\n    isAuth,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return ( \r\n        <Route \r\n            {...rest}\r\n            component={(props) => (\r\n                (isAuth) \r\n                ? (<Redirect to=\"/\"/>)\r\n                : (<Component {...props}/>)\r\n            )}\r\n        />\r\n     );\r\n}\r\n \r\nexport default PublicRoute;\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n    \r\n}","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({\r\n    isAuth,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n   \r\n    return ( \r\n        <Route \r\n            {...rest}\r\n            component={(props) => (\r\n                (isAuth) \r\n                ? (<Component {...props}/>)\r\n                : (<Redirect to=\"/login\"/>)\r\n            )}\r\n        />\r\n     );\r\n}\r\n \r\nexport default PrivateRoute;\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n    \r\n}","import React, { useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport LoginScreen from '../components/auth/LoginScreen';\r\nimport CalendarScreen from '../components/calendar/CalendarScreen';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from '../actions/auth';\r\nimport PublicRoute from './PublicRoute';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nconst AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    }, [dispatch])\r\n\r\n    if(checking){\r\n        return(<h5>Wait...</h5>)\r\n    }\r\n\r\n    return ( \r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PrivateRoute exact path=\"/\" isAuth={!!uid} component={CalendarScreen}/>\r\n                    <PublicRoute exact path=\"/login\" isAuth={!!uid} component={LoginScreen}/>\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            </div>\r\n            \r\n        </Router>\r\n     );\r\n}\r\n \r\nexport default AppRouter;","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: true,\r\n            }\r\n        case types.uiCloseModal:    \r\n            return{\r\n                ...state,\r\n                modalOpen: false,\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n            \r\n    }\r\n}","import {types} from \"../types/types\";\r\n/* {\r\n    id: \"asdasdasdasd\",\r\n    title: \"cumpleaños\",\r\n    start: moment().toDate(),\r\n    end: moment().add(2, \"hours\").toDate(),\r\n    notes: \"comprar torta\",\r\n    user: {\r\n        _id: \"123\",\r\n        name: \"facu\"\r\n    }\r\n} */\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdate:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    //uid: null,\r\n    //name: null\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n            }\r\n        case types.authLogout:\r\n            return{\r\n                checking: false,    \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport {uiReducer} from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport {rootReducer} from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react';\r\nimport AppRouter from \"./router/AppRouter\";\r\nimport { Provider } from 'react-redux';\r\nimport {store} from \"./store/store\";\r\nconst CalendarApp = () => {\r\n    return ( \r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n        \r\n    );\r\n}\r\n \r\nexport default CalendarApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport \"./index.css\"\n\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}